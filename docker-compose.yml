version: '3.3'

services:
  postgres:
    image: postgres:15beta3
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - musicalbumguide_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 80s  

  backend:
    build: ./backend
    restart: always
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./source_data:/app/core/management/commands/source_data
      - static_value:/app/backend/static/
    networks:
      - musicalbumguide_network

  frontend:
    build: ./frontend
    restart: always
    command: gunicorn frontend.wsgi:application --bind 0.0.0.0:7000
    expose:
      - 7000
    env_file:
      - .env
    volumes:
      - static_value:/app/frontend/static/
    networks:
      - musicalbumguide_network

  nginx:
    image: nginx:1.21.3-alpine
    restart: always
    ports:
      - "1337:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
    depends_on:
      - frontend
    networks:
      - musicalbumguide_network

volumes:
  postgres_data:
  static_value:

networks:
  musicalbumguide_network:
